name: IaC Pipeline

on:
  push:
    branches:
      - develop
      - main
    paths:
      - 'IaC/**'

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        working-directory: IaC

      - name: Terraform Validate
        run: terraform validate 
        working-directory: IaC

      - name: Terraform Plan
        run: terraform plan   -var-file="terraform.tfvars"
        working-directory: IaC

  deploy:
    if: github.ref == 'refs/heads/main'  # Deploy only on main branch
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init (Reinitialize Backend)
        run: terraform init -reconfigure
        working-directory: IaC

      - name: Terraform Apply
        run: terraform apply -auto-approve -var-file="terraform.tfvars"
        working-directory: IaC

      - name: ALB DNS Publish/Update
        id: get-alb-dns
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_AC }}  # Use GitHub PAT (Personal Access Token)
        run: |
          # Retrieve ALB DNS and remove newlines
          ALB_DNS=$(terraform output -raw alb_dns | tr -d '[:space:]')
          echo "ALB_DNS=$ALB_DNS" >> $GITHUB_ENV

          # Check if ALB_DNS is empty
          if [[ -z "$ALB_DNS" ]]; then
            echo "‚ùå Error: ALB_DNS is empty!"
            exit 1
          fi

          # Update README.md in root directory
          sed -i "s|Application URL: .*|Application URL: $ALB_DNS|" README.md

          # Configure Git with GitHub Actions identity
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"

          # Authenticate with GitHub using Personal Access Token (PAT)
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git

          # Commit and push changes
          git add README.md
          git commit -m "Update ALB DNS in README.md"
          git push origin main
        working-directory: IaC


